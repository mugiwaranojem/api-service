server {
    root /var/www/public;

    add_header X-XSS-Protection "1; mode=block";
    send_timeout 3600s;
    client_body_buffer_size 128k;
    client_max_body_size 20m;
    fastcgi_read_timeout 60m;
    fastcgi_intercept_errors off;

    # CHECKING HTTPS
    set $elb_https off;
    if ($http_x_forwarded_proto ~ https|HTTPS) { set $elb_https on; }


    # ELB health check
    location = /health-check-status {
        auth_basic off;
        access_log off;
        error_log off;
        default_type application/json;
        return 200 '{"status": "ok"}';
    }

    location ~* ^/webpush/.*\.js(/|$) {
        expires max;
        add_header Service-Worker-Allowed /;
    }

    location ~* \.(css|js|jpg|jpeg|gif|png|ico|pdf)$ {
        access_log off;
        add_header Cache-Control "public, must revalidate, proxy-revalidate";
        add_header Pragma public;
        add_header Vary Accept-Encoding;
        expires 7d;
    }

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        # Comment the next line and uncomment the next to enable dynamic resolution (incompatible with Kubernetes)
        #fastcgi_pass php:9000;
        resolver 127.0.0.11;
        set $upstream_host api_project-php;
        fastcgi_pass $upstream_host:9000;

        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param HTTPS $elb_https;
        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
      return 404;
    }
}